<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>在Mac/Windows平台搭建个人博客（Hexo + Github Pages）</title>
    <link href="/2023/04/23/%E5%9C%A8Mac-Windows%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo-Github-Pages%EF%BC%89/"/>
    <url>/2023/04/23/%E5%9C%A8Mac-Windows%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo-Github-Pages%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="在Mac-x2F-Windows平台搭建个人博客（Hexo-Github-Pages）"><a href="#在Mac-x2F-Windows平台搭建个人博客（Hexo-Github-Pages）" class="headerlink" title="在Mac&#x2F;Windows平台搭建个人博客（Hexo + Github Pages）"></a>在Mac&#x2F;Windows平台搭建个人博客（Hexo + Github Pages）</h1><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><h3 id="在mac上安装Node-js"><a href="#在mac上安装Node-js" class="headerlink" title="在mac上安装Node.js"></a>在mac上安装Node.js</h3><p>在 Mac 上安装 Node.js 的最简单方法是使用 Homebrew 包管理器。如果你没有安装 Homebrew，请按照以下步骤安装：</p><ol><li>在terminal，执行以下命令。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/usr/bin/ruby -e <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span><br></code></pre></td></tr></table></figure><p>​安装好了Homebrew，就可以执行以下命令安装Node.js:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install node<br></code></pre></td></tr></table></figure><p>​安装好以后输入以下命令确认Node.js是否正确安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v <br>npm -v<br></code></pre></td></tr></table></figure><p>​如果正确安装，将会显示Node.js的版本号。</p><h3 id="在Windows上安装Node-js"><a href="#在Windows上安装Node-js" class="headerlink" title="在Windows上安装Node.js"></a>在Windows上安装Node.js</h3><ol><li>下载 Node.js 官方安装程序。你可以在 <a href="https://nodejs.org/en/">Node.js 官方网站</a> 上下载最新的稳定版本(LTS)。</li><li>安装选项全部默认，一路点Next。</li><li>安装好以后，按Win+R打开命令提示符，输入以下命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v<br>npm -v<br></code></pre></td></tr></table></figure><pre><code class="hljs">     如果正确安装，将会显示Node.js的版本号</code></pre><h3 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h3><p>接下来需要注册一个Github账号，来存放我们的博客。</p><p>链接：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">这是一个链接 [Github](https://github.com)。<br></code></pre></td></tr></table></figure><p>注册好以后，点击右上角加号（头像左面），然后点击New repository新建一个仓库。如图所示：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">![这是图片](img/Github.png&quot;Github&quot;)<br></code></pre></td></tr></table></figure><p>然后如下图所示，Repository name输入自己项目名字+.github.io后缀</p><p>选择Public 然后点击Create repository创建仓库。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>安装Hexo 在一个合适的地方新建一个文件夹（注：Macos Catalina及以后用户不要在根目录下创建文件夹，不然需要root权限，我当时就在根目录创建的特别麻烦，webstorm等软件都无法修改。）</p><h3 id="Mac-x2F-Windows"><a href="#Mac-x2F-Windows" class="headerlink" title="Mac&#x2F;Windows"></a>Mac&#x2F;Windows</h3><ol><li>Mac：打开terminal执行以下命令&#x2F;Windows：该目录下右键点击<code>Git Bash Here</code>：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><ol start="2"><li>然后输入hexo -v验证是否安装成功</li><li>创建一个新的Hexo博客，执行一下命令。（初始化网站)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init blog<br><span class="hljs-built_in">cd</span> my blog<br>npm install<br></code></pre></td></tr></table></figure><ol start="4"><li>输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>打开本地服务器，然后浏览器打开localhost:4000&#x2F;，就可以看到我们初始的博客啦。</li><li>按ctrl+c关闭本地服务器。</li></ol><h3 id="链接Github与本地"><a href="#链接Github与本地" class="headerlink" title="链接Github与本地"></a>链接Github与本地</h3><ol><li>Windows：右键打开<code>Git bash</code>&#x2F;Mac：Mac：打开terminal，然后输入以下命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;example&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;example@example.com&quot;</span><br></code></pre></td></tr></table></figure><ul><li><p>用户名和邮箱根据你注册github的信息自行修改。</p></li><li><p>然后生成密钥ssh kay：</p></li></ul><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;792321264@qq.com&quot;</span><br></code></pre></td></tr></table></figure><ul><li><p>打开<a href="https://link.zhihu.com/?target=http://github.com/">github</a>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个SSH，名字随便。</p></li><li><p>Windows：右键<code>Git bash</code>&#x2F;Mac：terminal中输入：</p></li></ul><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">cat ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.pub<br></code></pre></td></tr></table></figure><ul><li><p>将输出的内容（密钥）复制到新建SSH的框中（Github），点击保存。</p></li><li><p>在终端输入<code>ssh -T git@github.com</code>，如果出现你的Github用户名，那就说明成功了。</p></li><li><p>打开终端执行命令：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> blog<br>npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><ul><li><p>打开博客根目录下的<code>_config.yml</code>文件，这是博客的配置文件，在这里你可以在这里修改与博客相关的各种信息。</p></li><li><p>修改最后一行的配置：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: git@github.com:你的用户名/你的用户名.github.io.git<br>  branch: master<br></code></pre></td></tr></table></figure><p>修改完成后按Command&#x2F;Control + S保存</p><h3 id="创建Github-Pages页面"><a href="#创建Github-Pages页面" class="headerlink" title="创建Github Pages页面"></a>创建Github Pages页面</h3><p>打开你的<code>Github</code>仓库点击<code>settings</code>左面找到<code>Pages</code> 并把里面的Branch改成<code>master</code> 。</p><h4 id="部署Hexo博客"><a href="#部署Hexo博客" class="headerlink" title="部署Hexo博客"></a>部署Hexo博客</h4><p>现在你已经准备好部署你的博客了。使用以下命令构建并部署你的博客：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g 是generate的缩写<br>hexo d 是deploy的缩写<br></code></pre></td></tr></table></figure><p>这将构建你的博客并将其部署到 GitHub Pages 页面上。</p><h2 id="访问博客和发布博客"><a href="#访问博客和发布博客" class="headerlink" title="访问博客和发布博客"></a>访问博客和发布博客</h2><p>完成上述步骤后，你现在可以通过以下 URL 访问你的博客了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://&lt;your-github-username&gt;.github.io/<br></code></pre></td></tr></table></figure><p>现在你可以开始发布新文章了。使用以下命令创建新文章：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>这将在 <code>source/_posts</code> 目录下创建一个新的 Markdown 文件。你可以使用 Markdown 格式编写文章。</p><p><strong>每当你发布新文章或对博客进行任何更改时，都需要重新构建并部署博客。使用以下命令：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>这将重新构建并部署你的博客，将更改推送到 GitHub Pages 页面上。</p><h2 id="使用主题"><a href="#使用主题" class="headerlink" title="使用主题"></a>使用主题</h2><p>Hexo 支持多种主题，可以让你的博客变得更加漂亮和个性化。以下是使用主题的一些基本步骤：</p><ol><li>找到你喜欢的主题，可以在 <a href="https://hexo.io/themes/">Hexo 官方网站</a> 或 <a href="https://github.com/topics/hexo-theme">GitHub</a> 上寻找。</li><li>下载主题的源代码，并配置。</li><li>在 <code>myblog/_config.yml</code> 文件中设置主题。例如，如果你想使用 <code>某个主题</code> 主题，可以将以下内容添加到文件中：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">theme: 你选择的主题<br></code></pre></td></tr></table></figure><ol start="4"><li>运行以下命令重新构建并部署博客：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>到此你已经成功部署了你的个人博客，你可以轻松地创建和定制自己的博客，并将其发布到互联网上。</p><ol start="5"><li>主题的配置细节需要去各主题的官网查看配置方法。</li></ol><h2 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#注意以下命令需要切换到blog文件夹(cd blog)执行</span><br>hexo n <span class="hljs-string">&quot;文章名称&quot;</span>  =&gt; hexo new <span class="hljs-string">&quot;文章名称&quot;</span>  <span class="hljs-comment">#这两个都是创建新文章，前者是简写模式，下同，new后面加一个draft可以生成草稿</span><br>hexo p  =&gt; hexo publish  <span class="hljs-comment">#发布草稿</span><br>hexo g  =&gt; hexo generate  <span class="hljs-comment">#生成</span><br>hexo s  =&gt; hexo server  <span class="hljs-comment">#启动服务预览</span><br>hexo d  =&gt; hexo deploy  <span class="hljs-comment">#部署</span><br><br>hexo server   <span class="hljs-comment">#Hexo 会监视文件变动并自动更新，无须重启服务器。</span><br>hexo server -s   <span class="hljs-comment">#静态模式</span><br>hexo server -p 5000   <span class="hljs-comment">#更改端口</span><br>hexo server -i 192.168.1.1   <span class="hljs-comment">#自定义IP</span><br>hexo clean   <span class="hljs-comment">#清除缓存，网页正常情况下可以忽略此条命令</span><br>hexo g   <span class="hljs-comment">#生成静态网页</span><br>hexo d   <span class="hljs-comment">#开始部署</span><br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>我从开始搭建这个博客到发布我的第一篇博客并大概用了1个多小时，上传了一些好看的图片并修改一些功能。总的来说这是一个非常有意思的项目。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/04/23/%E5%9C%A8MacWindows%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo%20+%20Github%20Pages%EF%BC%89/"/>
    <url>/2023/04/23/%E5%9C%A8MacWindows%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo%20+%20Github%20Pages%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="在Mac-x2F-Windows平台搭建个人博客（Hexo-Github-Pages）"><a href="#在Mac-x2F-Windows平台搭建个人博客（Hexo-Github-Pages）" class="headerlink" title="在Mac&#x2F;Windows平台搭建个人博客（Hexo + Github Pages）"></a>在Mac&#x2F;Windows平台搭建个人博客（Hexo + Github Pages）</h1><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><h3 id="在mac上安装Node-js"><a href="#在mac上安装Node-js" class="headerlink" title="在mac上安装Node.js"></a>在mac上安装Node.js</h3><p>在 Mac 上安装 Node.js 的最简单方法是使用 Homebrew 包管理器。如果你没有安装 Homebrew，请按照以下步骤安装：</p><ol><li>在terminal，执行以下命令。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/usr/bin/ruby -e <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span><br></code></pre></td></tr></table></figure><p>​安装好了Homebrew，就可以执行以下命令安装Node.js:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install node<br></code></pre></td></tr></table></figure><p>​安装好以后输入以下命令确认Node.js是否正确安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v <br>npm -v<br></code></pre></td></tr></table></figure><p>​如果正确安装，将会显示Node.js的版本号。</p><h3 id="在Windows上安装Node-js"><a href="#在Windows上安装Node-js" class="headerlink" title="在Windows上安装Node.js"></a>在Windows上安装Node.js</h3><ol><li>下载 Node.js 官方安装程序。你可以在 <a href="https://nodejs.org/en/">Node.js 官方网站</a> 上下载最新的稳定版本(LTS)。</li><li>安装选项全部默认，一路点Next。</li><li>安装好以后，按Win+R打开命令提示符，输入以下命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v<br>npm -v<br></code></pre></td></tr></table></figure><pre><code class="hljs">     如果正确安装，将会显示Node.js的版本号</code></pre><h3 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h3><p>接下来需要注册一个Github账号，来存放我们的博客。</p><p>链接：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">这是一个链接 [Github](https://github.com)。<br></code></pre></td></tr></table></figure><p>注册好以后，点击右上角加号（头像左面），然后点击New repository新建一个仓库。如图所示：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">![这是图片](img/Github.png&quot;Github&quot;)<br></code></pre></td></tr></table></figure><p>然后如下图所示，Repository name输入自己项目名字+.github.io后缀</p><p>选择Public 然后点击Create repository创建仓库。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>安装Hexo 在一个合适的地方新建一个文件夹（注：Macos Catalina及以后用户不要在根目录下创建文件夹，不然需要root权限，我当时就在根目录创建的特别麻烦，webstorm等软件都无法修改。）</p><h3 id="Mac-x2F-Windows"><a href="#Mac-x2F-Windows" class="headerlink" title="Mac&#x2F;Windows"></a>Mac&#x2F;Windows</h3><ol><li>Mac：打开terminal执行以下命令&#x2F;Windows：该目录下右键点击<code>Git Bash Here</code>：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><ol start="2"><li>然后输入hexo -v验证是否安装成功</li><li>创建一个新的Hexo博客，执行一下命令。（初始化网站)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init blog<br><span class="hljs-built_in">cd</span> my blog<br>npm install<br></code></pre></td></tr></table></figure><ol start="4"><li>输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>打开本地服务器，然后浏览器打开localhost:4000&#x2F;，就可以看到我们初始的博客啦。</li><li>按ctrl+c关闭本地服务器。</li></ol><h3 id="链接Github与本地"><a href="#链接Github与本地" class="headerlink" title="链接Github与本地"></a>链接Github与本地</h3><ol><li>Windows：右键打开<code>Git bash</code>&#x2F;Mac：Mac：打开terminal，然后输入以下命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;example&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;example@example.com&quot;</span><br></code></pre></td></tr></table></figure><ul><li><p>用户名和邮箱根据你注册github的信息自行修改。</p></li><li><p>然后生成密钥ssh kay：</p></li></ul><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;792321264@qq.com&quot;</span><br></code></pre></td></tr></table></figure><ul><li><p>打开<a href="https://link.zhihu.com/?target=http://github.com/">github</a>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个SSH，名字随便。</p></li><li><p>Windows：右键<code>Git bash</code>&#x2F;Mac：terminal中输入：</p></li></ul><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">cat ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.pub<br></code></pre></td></tr></table></figure><ul><li><p>将输出的内容（密钥）复制到新建SSH的框中（Github），点击保存。</p></li><li><p>在终端输入<code>ssh -T git@github.com</code>，如果出现你的Github用户名，那就说明成功了。</p></li><li><p>打开终端执行命令：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> blog<br>npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><ul><li><p>打开博客根目录下的<code>_config.yml</code>文件，这是博客的配置文件，在这里你可以在这里修改与博客相关的各种信息。</p></li><li><p>修改最后一行的配置：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: git@github.com:你的用户名/你的用户名.github.io.git<br>  branch: master<br></code></pre></td></tr></table></figure><p>修改完成后按Command&#x2F;Control + S保存</p><h3 id="创建Github-Pages页面"><a href="#创建Github-Pages页面" class="headerlink" title="创建Github Pages页面"></a>创建Github Pages页面</h3><p>打开你的<code>Github</code>仓库点击<code>settings</code>左面找到<code>Pages</code> 并把里面的Branch改成<code>master</code> 。</p><h4 id="部署Hexo博客"><a href="#部署Hexo博客" class="headerlink" title="部署Hexo博客"></a>部署Hexo博客</h4><p>现在你已经准备好部署你的博客了。使用以下命令构建并部署你的博客：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g 是generate的缩写<br>hexo d 是deploy的缩写<br></code></pre></td></tr></table></figure><p>这将构建你的博客并将其部署到 GitHub Pages 页面上。</p><h2 id="访问博客和发布博客"><a href="#访问博客和发布博客" class="headerlink" title="访问博客和发布博客"></a>访问博客和发布博客</h2><p>完成上述步骤后，你现在可以通过以下 URL 访问你的博客了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://&lt;your-github-username&gt;.github.io/<br></code></pre></td></tr></table></figure><p>现在你可以开始发布新文章了。使用以下命令创建新文章：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>这将在 <code>source/_posts</code> 目录下创建一个新的 Markdown 文件。你可以使用 Markdown 格式编写文章。</p><p><strong>每当你发布新文章或对博客进行任何更改时，都需要重新构建并部署博客。使用以下命令：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>这将重新构建并部署你的博客，将更改推送到 GitHub Pages 页面上。</p><h2 id="使用主题"><a href="#使用主题" class="headerlink" title="使用主题"></a>使用主题</h2><p>Hexo 支持多种主题，可以让你的博客变得更加漂亮和个性化。以下是使用主题的一些基本步骤：</p><ol><li>找到你喜欢的主题，可以在 <a href="https://hexo.io/themes/">Hexo 官方网站</a> 或 <a href="https://github.com/topics/hexo-theme">GitHub</a> 上寻找。</li><li>下载主题的源代码，并配置。</li><li>在 <code>myblog/_config.yml</code> 文件中设置主题。例如，如果你想使用 <code>某个主题</code> 主题，可以将以下内容添加到文件中：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">theme: 你选择的主题<br></code></pre></td></tr></table></figure><ol start="4"><li>运行以下命令重新构建并部署博客：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>到此你已经成功部署了你的个人博客，你可以轻松地创建和定制自己的博客，并将其发布到互联网上。</p><ol start="5"><li>主题的配置细节需要去各主题的官网查看配置方法。</li></ol><h2 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#注意以下命令需要切换到blog文件夹(cd blog)执行</span><br>hexo n <span class="hljs-string">&quot;文章名称&quot;</span>  =&gt; hexo new <span class="hljs-string">&quot;文章名称&quot;</span>  <span class="hljs-comment">#这两个都是创建新文章，前者是简写模式，下同，new后面加一个draft可以生成草稿</span><br>hexo p  =&gt; hexo publish  <span class="hljs-comment">#发布草稿</span><br>hexo g  =&gt; hexo generate  <span class="hljs-comment">#生成</span><br>hexo s  =&gt; hexo server  <span class="hljs-comment">#启动服务预览</span><br>hexo d  =&gt; hexo deploy  <span class="hljs-comment">#部署</span><br><br>hexo server   <span class="hljs-comment">#Hexo 会监视文件变动并自动更新，无须重启服务器。</span><br>hexo server -s   <span class="hljs-comment">#静态模式</span><br>hexo server -p 5000   <span class="hljs-comment">#更改端口</span><br>hexo server -i 192.168.1.1   <span class="hljs-comment">#自定义IP</span><br>hexo clean   <span class="hljs-comment">#清除缓存，网页正常情况下可以忽略此条命令</span><br>hexo g   <span class="hljs-comment">#生成静态网页</span><br>hexo d   <span class="hljs-comment">#开始部署</span><br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>我从开始搭建这个博客到发布我的第一篇博客并大概用了1个多小时，上传了一些好看的图片并修改一些功能。总的来说这是一个非常有意思的项目。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>社交媒体和数字技术对人类生活的影响和作用</title>
    <link href="/2023/04/22/%E7%A4%BE%E4%BA%A4%E5%AA%92%E4%BD%93%E5%92%8C%E6%95%B0%E5%AD%97%E6%8A%80%E6%9C%AF%E5%AF%B9%E4%BA%BA%E7%B1%BB%E7%94%9F%E6%B4%BB%E7%9A%84%E5%BD%B1%E5%93%8D%E5%92%8C%E4%BD%9C%E7%94%A8/"/>
    <url>/2023/04/22/%E7%A4%BE%E4%BA%A4%E5%AA%92%E4%BD%93%E5%92%8C%E6%95%B0%E5%AD%97%E6%8A%80%E6%9C%AF%E5%AF%B9%E4%BA%BA%E7%B1%BB%E7%94%9F%E6%B4%BB%E7%9A%84%E5%BD%B1%E5%93%8D%E5%92%8C%E4%BD%9C%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="社交媒体和数字技术对人类生活的影响和作用"><a href="#社交媒体和数字技术对人类生活的影响和作用" class="headerlink" title="社交媒体和数字技术对人类生活的影响和作用"></a>社交媒体和数字技术对人类生活的影响和作用</h1><p>在当今数字化的时代，社交媒体和数字技术已经成为人们生活中不可或缺的一部分。无论是个人还是企业，都需要使用这些技术来保持联系、交流和推广自己的业务。然而，这些技术也对人类的生活产生了深远的影响和作用，以下是一些值得探讨的方面。</p><h2 id="社交媒体的影响"><a href="#社交媒体的影响" class="headerlink" title="社交媒体的影响"></a>社交媒体的影响</h2><p>社交媒体已经成为了人们日常生活中的重要组成部分，每天有数以亿计的人们在社交媒体上分享信息、发表评论和与他人互动。这种互动方式已经改变了人们的交流方式和社会关系。同时，社交媒体也成为了企业推广和营销的主要渠道之一，通过社交媒体可以更快地传播信息和吸引更多的消费者。</p><p>然而，社交媒体也存在着一些负面影响。例如，人们可能会在社交媒体上受到欺凌和辱骂，或者沉迷于社交媒体而影响工作和生活。因此，我们需要在使用社交媒体时保持理性和谨慎，注意自我保护和隐私安全。</p><h2 id="数字技术的作用"><a href="#数字技术的作用" class="headerlink" title="数字技术的作用"></a>数字技术的作用</h2><p>数字技术在人类生活中扮演着越来越重要的角色，它们改变了人们的工作、生活和娱乐方式。例如，在工作方面，数字技术使得远程办公成为了可能，提高了工作效率和灵活性。在生活方面，数字技术也带来了诸多便利，例如在线购物、移动支付等等。在娱乐方面，数字技术让人们可以随时随地享受电影、音乐、游戏等各种娱乐内容。</p><p>然而，数字技术也带来了一些负面影响，例如信息泄露和网络安全问题。我们需要重视数字安全和隐私保护，避免因为数字技术而产生的负面影响。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>社交媒体和数字技术已经成为了人类生活中不可或缺的一部分，对人类生活产生了深远的影响和作用。我们需要认识到这些技术的正面和负面影响，尽可能地利用它们的优势，并避免产生负面影响。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>《流浪地球2》：翘首以盼的科幻巨制</title>
    <link href="/2023/04/22/%E3%80%8A%E6%B5%81%E6%B5%AA%E5%9C%B0%E7%90%832%E3%80%8B%EF%BC%9A%E7%BF%98%E9%A6%96%E4%BB%A5%E7%9B%BC%E7%9A%84%E7%A7%91%E5%B9%BB%E5%B7%A8%E5%88%B6/"/>
    <url>/2023/04/22/%E3%80%8A%E6%B5%81%E6%B5%AA%E5%9C%B0%E7%90%832%E3%80%8B%EF%BC%9A%E7%BF%98%E9%A6%96%E4%BB%A5%E7%9B%BC%E7%9A%84%E7%A7%91%E5%B9%BB%E5%B7%A8%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<p>作为备受期待的科幻电影，《流浪地球2》将于近期在全球范围内上映。这部电影是由郭帆导演执导，由吴京、屈楚萧等知名演员主演。本篇博客将为您介绍这部备受瞩目的电影，以及为什么它会成为一部非常成功的科幻巨制。</p><h2 id="剧情概述"><a href="#剧情概述" class="headerlink" title="剧情概述"></a>剧情概述</h2><p>《流浪地球2》的故事发生在原电影故事结尾的10年后，当时人类成功避免了地球与木星的碰撞，但这也意味着人类需要不断寻找新的生存之路。电影中，人类将探索太阳系中的其他星球，并尝试建立新的家园。</p><h2 id="期待的原因"><a href="#期待的原因" class="headerlink" title="期待的原因"></a>期待的原因</h2><h3 id="优秀的制作团队"><a href="#优秀的制作团队" class="headerlink" title="优秀的制作团队"></a>优秀的制作团队</h3><p>这部电影的制作团队非常强大。导演郭帆在中国电影业界有着广泛的声誉，他曾执导过《天下无贼》、《后会无期》等成功的电影作品。此外，该片的编剧团队也非常强大，包括了许多中国最优秀的编剧。</p><h3 id="大胆的视觉效果"><a href="#大胆的视觉效果" class="headerlink" title="大胆的视觉效果"></a>大胆的视觉效果</h3><p>《流浪地球2》采用了最新的视觉效果技术，使得影片的画面更加逼真和震撼人心。预告片中展示的场景，例如新星球的壮丽景象和飞行器的设计等，都让人印象深刻。</p><h3 id="继承与创新"><a href="#继承与创新" class="headerlink" title="继承与创新"></a>继承与创新</h3><p>《流浪地球2》既继承了原电影的基本设定和人物，又在原有基础上进行了一系列的创新。这部电影将更加深入地探索人类的命运和未来，同时也会带来更多的惊喜和转折。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>《流浪地球2》备受期待，其制作团队、视觉效果以及故事情节都足以让人们心动。对于科幻电影爱好者来说，这将是一部不可错过的电影。我们期待着这部电影在未来的上映中取得更大的成功和赞誉。</p><p>以上就是我关于《流浪地球2》的博客。希望这篇文章可以为您提供一些有用的信息和见解。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
